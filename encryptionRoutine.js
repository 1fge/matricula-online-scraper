/*
Reversed Encryption Routine
(source found at https://cdn-static.matricula-online.eu/static/js/matricula-imageview-compiled.js)
*/

var Uc = 4;
var ad=[0,3,6,5,12,15,10,9,24,27,30,29,20,23,18,17,48,51,54,53,60,63,58,57,40,43,46,45,36,39,34,33,96,99,102,101,108,111,106,105,120,123,126,125,116,119,114,113,80,83,86,85,92,95,90,89,72,75,78,77,68,71,66,65,192,195,198,197,204,207,202,201,216,219,222,221,212,215,210,209,240,243,246,245,252,255,250,249,232,235,238,237,228,231,226,225,160,163,166,165,172,175,170,169,184,187,190,189,180,183,178,177,144,147,150,149,156,159,154,153,136,139,142,141,132,135,130,129,155,152,157,158,151,148,145,146,131,128,133,134,143,140,137,138,171,168,173,174,167,164,161,162,179,176,181,182,191,188,185,186,251,248,253,254,247,244,241,242,227,224,229,230,239,236,233,234,203,200,205,206,199,196,193,194,211,208,213,214,223,220,217,218,91,88,93,94,87,84,81,82,67,64,69,70,79,76,73,74,107,104,109,110,103,100,97,98,115,112,117,118,127,124,121,122,59,56,61,62,55,52,49,50,35,32,37,38,47,44,41,42,11,8,13,14,7,4,1,2,19,16,21,22,31,28,25,26];
var $c=[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,27,25,31,29,19,17,23,21,11,9,15,13,3,1,7,5,59,57,63,61,51,49,55,53,43,41,47,45,35,33,39,37,91,89,95,93,83,81,87,85,75,73,79,77,67,65,71,69,123,121,127,125,115,113,119,117,107,105,111,109,99,97,103,101,155,153,159,157,147,145,151,149,139,137,143,141,131,129,135,133,187,185,191,189,179,177,183,181,171,169,175,173,163,161,167,165,219,217,223,221,211,209,215,213,203,201,207,205,195,193,199,197,251,249,255,253,243,241,247,245,235,233,239,237,227,225,231,229];
var bd=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];

let bigIntObject = Object;
bigIntObject.a = [[112,71,53,56],[38,81,106,36],[63,46,100,61],[40,60,46,91],[118,33,107,74],[107,109,95,88],[78,98,115,97],[54,101,46,102],[60,118,6,61],[26,39,108,25],[37,9,8,36],[13,53,38,127],[161,183,156,152],[202,218,195,192],[132,184,176,161],[178,221,158,199],[255,125,192,10],[229,90,172,19],[192,83,164,55],[205,102,130,72],[28,132,143,202],[214,94,76,10],[82,230,252,171],[224,59,98,108],[25,215,144,235],[252,141,60,248],[60,222,152,207],[241,184,26,135],[189,232,45,221],[107,182,97,215],[57,80,157,124],[217,107,255,16],[110,193,90,222],[146,76,102,38],[174,146,254,233],[95,42,228,110],[114,13,68,66],[25,187,37,149],[32,235,184,233],[249,128,71,249],[179,97,195,71],[33,45,165,97],[143,191,91,136],[208,149,191,230],[2,39,76,204],[27,156,105,89],[59,119,209,176],[194,247,150,73],[251,241,248,98],[218,220,93,3],[85,99,6,139],[133,246,185,109],[149,101,26,240],[142,249,115,169],[181,142,162,25],[119,121,52,80],[13,233,171,151],[215,53,246,148],[130,86,240,31],[7,160,73,114]];

let Ya = Array.prototype.map ? function (a, b, c) {
    return Array.prototype.map.call(a, b, c)
  }
   : function (a, b, c) {
    for (var d = a.length, e = Array(d), f = ma(a) ? a.split('') : a, g = 0; g < d; g++) g in f && (e[g] = b.call(c, f[g], g, a));
    return e
  };


function Xc(a, b) {
    for (var c = 0; 4 > c; c++) {
        for (var d = 0; 4 > d; d++) {
            a.c[c][d] ^= bigIntObject.a[4 * b + d][c]
        }
    }
}

function Yc(a) {
    for (var b = bd, c = 0; 4 > c; c++) for (var d = 0; 4 > d; d++) a.c[c][d] = b[a.c[c][d]]
}

function Zc(a) {
    for (var b = 1; 4 > b; b++) for (var c = 0; 4 > c; c++) a.g[b][c] = a.c[b][c];
    for (b = 1; 4 > b; b++) for (c = 0; 4 > c; c++) a.c[b][c] = a.g[b][(c + b) % Uc]
}

let encrypt = function (a) {
    let encryptionObject = Object;

    encryptionObject.g = [
        [],
        [],
        [],
        []
    ]

    encryptionObject.c = [
        [],
        [],
        [],
        []
    ]

    for (var b, c = 0; c < Uc; c++) for (var d = 0; 4 > d; d++) b = 4 * d + c, b = a[b],
    encryptionObject.c[c][d] = b;

    Xc(encryptionObject, 0);
    for (a = 1; a < 14; ++a) {
      Yc(encryptionObject);
      Zc(encryptionObject);
      c = encryptionObject.c;
      d = encryptionObject.g[0];
      for (b = 0; 4 > b; b++) d[0] = c[0][b],
      d[1] = c[1][b],
      d[2] = c[2][b],
      d[3] = c[3][b],
      c[0][b] = $c[d[0]] ^ ad[d[1]] ^ d[2] ^ d[3],
      c[1][b] = d[0] ^ $c[d[1]] ^ ad[d[2]] ^ d[3],
      c[2][b] = d[0] ^ d[1] ^ $c[d[2]] ^ ad[d[3]],
      c[3][b] = ad[d[0]] ^ d[1] ^ d[2] ^ $c[d[3]];
      Xc(encryptionObject, a)
    }
    Yc(encryptionObject);
    Zc(encryptionObject);
    Xc(encryptionObject, 14);
    a = [
    ];
    for (c = 0; c < Uc; c++) for (d = 0; 4 > d; d++) a[4 * d + c] = encryptionObject.c[c][d];
    return a
};

function Rc(a) {
    return Ya(a, function (a) {
      a = a.toString(16);
      return 1 < a.length ? a : '0' + a
    }).join('')
  }

function Nt(a, b, c) {
    c || (c = 0);
    var d = Array(16);
    if (ma(b)) for (var e = 0; 16 > e; ++e) d[e] = b.charCodeAt(c++) | b.charCodeAt(c++) << 8 | b.charCodeAt(c++) << 16 | b.charCodeAt(c++) << 24;
     else for (e = 0; 16 > e; ++e) d[e] = b[c++] | b[c++] << 8 | b[c++] << 16 | b[c++] << 24;
    b = a.a[0];
    c = a.a[1];
    e = a.a[2];
    var f = a.a[3];
    var g = b + (f ^ c & (e ^ f)) + d[0] + 3614090360 & 4294967295;
    b = c + (g << 7 & 4294967295 | g >>> 25);
    g = f + (e ^ b & (c ^ e)) + d[1] + 3905402710 & 4294967295;
    f = b + (g << 12 & 4294967295 | g >>> 20);
    g = e + (c ^ f & (b ^ c)) + d[2] + 606105819 & 4294967295;
    e = f + (g << 17 & 4294967295 | g >>> 15);
    g = c + (b ^ e & (f ^ b)) + d[3] + 3250441966 & 4294967295;
    c = e + (g << 22 & 4294967295 | g >>> 10);
    g = b + (f ^ c & (e ^ f)) + d[4] + 4118548399 & 4294967295;
    b = c + (g << 7 & 4294967295 | g >>> 25);
    g = f + (e ^ b & (c ^ e)) + d[5] + 1200080426 & 4294967295;
    f = b + (g << 12 & 4294967295 | g >>> 20);
    g = e + (c ^ f & (b ^ c)) + d[6] + 2821735955 & 4294967295;
    e = f + (g << 17 & 4294967295 | g >>> 15);
    g = c + (b ^ e & (f ^ b)) + d[7] + 4249261313 & 4294967295;
    c = e + (g << 22 & 4294967295 | g >>> 10);
    g = b + (f ^ c & (e ^ f)) + d[8] + 1770035416 & 4294967295;
    b = c + (g << 7 & 4294967295 | g >>> 25);
    g = f + (e ^ b & (c ^ e)) + d[9] + 2336552879 & 4294967295;
    f = b + (g << 12 & 4294967295 | g >>> 20);
    g = e + (c ^ f & (b ^ c)) + d[10] + 4294925233 & 4294967295;
    e = f + (g << 17 & 4294967295 | g >>> 15);
    g = c + (b ^ e & (f ^ b)) + d[11] + 2304563134 & 4294967295;
    c = e + (g << 22 & 4294967295 | g >>> 10);
    g = b + (f ^ c & (e ^ f)) + d[12] + 1804603682 & 4294967295;
    b = c + (g << 7 & 4294967295 | g >>> 25);
    g = f + (e ^ b & (c ^ e)) + d[13] + 4254626195 & 4294967295;
    f = b + (g << 12 & 4294967295 | g >>> 20);
    g = e + (c ^ f & (b ^ c)) + d[14] + 2792965006 & 4294967295;
    e = f + (g << 17 & 4294967295 | g >>> 15);
    g = c + (b ^ e & (f ^ b)) + d[15] + 1236535329 & 4294967295;
    c = e + (g << 22 & 4294967295 | g >>> 10);
    g = b + (e ^ f & (c ^ e)) + d[1] + 4129170786 & 4294967295;
    b = c + (g << 5 & 4294967295 | g >>> 27);
    g = f + (c ^ e & (b ^ c)) + d[6] + 3225465664 & 4294967295;
    f = b + (g << 9 & 4294967295 | g >>> 23);
    g = e + (b ^ c & (f ^ b)) + d[11] + 643717713 & 4294967295;
    e = f + (g << 14 & 4294967295 | g >>> 18);
    g = c + (f ^ b & (e ^ f)) + d[0] + 3921069994 & 4294967295;
    c = e + (g << 20 & 4294967295 | g >>> 12);
    g = b + (e ^ f & (c ^ e)) + d[5] + 3593408605 & 4294967295;
    b = c + (g << 5 & 4294967295 | g >>> 27);
    g = f + (c ^ e & (b ^ c)) + d[10] + 38016083 & 4294967295;
    f = b + (g << 9 & 4294967295 | g >>> 23);
    g = e + (b ^ c & (f ^ b)) + d[15] + 3634488961 & 4294967295;
    e = f + (g << 14 & 4294967295 | g >>> 18);
    g = c + (f ^ b & (e ^ f)) + d[4] + 3889429448 & 4294967295;
    c = e + (g << 20 & 4294967295 | g >>> 12);
    g = b + (e ^ f & (c ^ e)) + d[9] + 568446438 & 4294967295;
    b = c + (g << 5 & 4294967295 | g >>> 27);
    g = f + (c ^ e & (b ^ c)) + d[14] + 3275163606 & 4294967295;
    f = b + (g << 9 & 4294967295 | g >>> 23);
    g = e + (b ^ c & (f ^ b)) + d[3] + 4107603335 & 4294967295;
    e = f + (g << 14 & 4294967295 | g >>> 18);
    g = c + (f ^ b & (e ^ f)) + d[8] + 1163531501 & 4294967295;
    c = e + (g << 20 & 4294967295 | g >>> 12);
    g = b + (e ^ f & (c ^ e)) + d[13] + 2850285829 & 4294967295;
    b = c + (g << 5 & 4294967295 | g >>> 27);
    g = f + (c ^ e & (b ^ c)) + d[2] + 4243563512 & 4294967295;
    f = b + (g << 9 & 4294967295 | g >>> 23);
    g = e + (b ^ c & (f ^ b)) + d[7] + 1735328473 & 4294967295;
    e = f + (g << 14 & 4294967295 | g >>> 18);
    g = c + (f ^ b & (e ^ f)) + d[12] + 2368359562 & 4294967295;
    c = e + (g << 20 & 4294967295 | g >>> 12);
    g = b + (c ^ e ^ f) + d[5] + 4294588738 & 4294967295;
    b = c + (g << 4 & 4294967295 | g >>> 28);
    g = f + (b ^ c ^ e) + d[8] + 2272392833 & 4294967295;
    f = b + (g << 11 & 4294967295 | g >>> 21);
    g = e + (f ^ b ^ c) + d[11] + 1839030562 & 4294967295;
    e = f + (g << 16 & 4294967295 | g >>> 16);
    g = c + (e ^ f ^ b) + d[14] + 4259657740 & 4294967295;
    c = e + (g << 23 & 4294967295 | g >>> 9);
    g = b + (c ^ e ^ f) + d[1] + 2763975236 & 4294967295;
    b = c + (g << 4 & 4294967295 | g >>> 28);
    g = f + (b ^ c ^ e) + d[4] + 1272893353 & 4294967295;
    f = b + (g << 11 & 4294967295 | g >>> 21);
    g = e + (f ^ b ^ c) + d[7] + 4139469664 & 4294967295;
    e = f + (g << 16 & 4294967295 | g >>> 16);
    g = c + (e ^ f ^ b) + d[10] + 3200236656 & 4294967295;
    c = e + (g << 23 & 4294967295 | g >>> 9);
    g = b + (c ^ e ^ f) + d[13] + 681279174 & 4294967295;
    b = c + (g << 4 & 4294967295 | g >>> 28);
    g = f + (b ^ c ^ e) + d[0] + 3936430074 & 4294967295;
    f = b + (g << 11 & 4294967295 | g >>> 21);
    g = e + (f ^ b ^ c) + d[3] + 3572445317 & 4294967295;
    e = f + (g << 16 & 4294967295 | g >>> 16);
    g = c + (e ^ f ^ b) + d[6] + 76029189 & 4294967295;
    c = e + (g << 23 & 4294967295 | g >>> 9);
    g = b + (c ^ e ^ f) + d[9] + 3654602809 & 4294967295;
    b = c + (g << 4 & 4294967295 | g >>> 28);
    g = f + (b ^ c ^ e) + d[12] + 3873151461 & 4294967295;
    f = b + (g << 11 & 4294967295 | g >>> 21);
    g = e + (f ^ b ^ c) + d[15] + 530742520 & 4294967295;
    e = f + (g << 16 & 4294967295 | g >>> 16);
    g = c + (e ^ f ^ b) + d[2] + 3299628645 & 4294967295;
    c = e + (g << 23 & 4294967295 | g >>> 9);
    g = b + (e ^ (c | ~f)) + d[0] + 4096336452 & 4294967295;
    b = c + (g << 6 & 4294967295 | g >>> 26);
    g = f + (c ^ (b | ~e)) + d[7] + 1126891415 & 4294967295;
    f = b + (g << 10 & 4294967295 | g >>> 22);
    g = e + (b ^ (f | ~c)) + d[14] + 2878612391 & 4294967295;
    e = f + (g << 15 & 4294967295 | g >>> 17);
    g = c + (f ^ (e | ~b)) + d[5] + 4237533241 & 4294967295;
    c = e + (g << 21 & 4294967295 | g >>> 11);
    g = b + (e ^ (c | ~f)) + d[12] + 1700485571 & 4294967295;
    b = c + (g << 6 & 4294967295 | g >>> 26);
    g = f + (c ^ (b | ~e)) + d[3] + 2399980690 & 4294967295;
    f = b + (g << 10 & 4294967295 | g >>> 22);
    g = e + (b ^ (f | ~c)) + d[10] + 4293915773 & 4294967295;
    e = f + (g << 15 & 4294967295 | g >>> 17);
    g = c + (f ^ (e | ~b)) + d[1] + 2240044497 & 4294967295;
    c = e + (g << 21 & 4294967295 | g >>> 11);
    g = b + (e ^ (c | ~f)) + d[8] + 1873313359 & 4294967295;
    b = c + (g << 6 & 4294967295 | g >>> 26);
    g = f + (c ^ (b | ~e)) + d[15] + 4264355552 & 4294967295;
    f = b + (g << 10 & 4294967295 | g >>> 22);
    g = e + (b ^ (f | ~c)) + d[6] + 2734768916 & 4294967295;
    e = f + (g << 15 & 4294967295 | g >>> 17);
    g = c + (f ^ (e | ~b)) + d[13] + 1309151649 & 4294967295;
    c = e + (g << 21 & 4294967295 | g >>> 11);
    g = b + (e ^ (c | ~f)) + d[4] + 4149444226 & 4294967295;
    b = c + (g << 6 & 4294967295 | g >>> 26);
    g = f + (c ^ (b | ~e)) + d[11] + 3174756917 & 4294967295;
    f = b + (g << 10 & 4294967295 | g >>> 22);
    g = e + (b ^ (f | ~c)) + d[2] + 718787259 & 4294967295;
    e = f + (g << 15 & 4294967295 | g >>> 17);
    g = c + (f ^ (e | ~b)) + d[9] + 3951481745 & 4294967295;
    a.a[0] = a.a[0] + b & 4294967295;
    a.a[1] = a.a[1] + (e + (g << 21 & 4294967295 | g >>> 11)) & 4294967295;
    a.a[2] = a.a[2] + e & 4294967295;
    a.a[3] = a.a[3] + f & 4294967295
}

function Qc(a) {
    for (var b = [], c = 0, d = 0; d < a.length; d++) {
      var e = a.charCodeAt(d);
      255 < e && (b[c++] = e & 255, e >>= 8);
      b[c++] = e
    }
    return b
}

function la(a) {
    return void 0 !== a
}

function ma(a) {
    return 'string' == typeof a
}

function Ot(a, b) {
    if (!la(c)) var c = b.length;
    for (var d = c - a.b, e = a.g, f = a.c, g = 0; g < c; ) {
      if (0 == f) for (; g <= d; ) Nt(a, b, g),
      g += a.b;
      if (ma(b)) for (; g < c; ) {
        if (e[f++] = b.charCodeAt(g++), f == a.b) {
          Nt(a, e);
          f = 0;
          break
        }
      } else for (; g < c; ) if (e[f++] = b[g++], f == a.b) {
        Nt(a, e);
        f = 0;
        break
      }
    }
    a.c = f;
    a.f += c
  };

function createValidURL(currentImage, csrf) {
    const host = "https://img.data.matricula-online.eu"
    let b = currentImage + "?csrf=" + csrf

    let a = Object;
    a.v={b:64,a:[1732584193,4023233417,2562383102,271733878],g:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],c:0,f:0};
    Ot(a.v, Qc(b))
    let c = a.v;
    var d = Array((56 > c.c ? c.b : 2 * c.b) - c.c);
    d[0] = 128;
    for (var e = 1; e < d.length - 8; ++e) d[e] = 0;
    var f = 8 * c.f;
    for (e = d.length - 8; e < d.length; ++e) d[e] = f & 255,
    f /= 256;
    Ot(c, d);
    d = Array(16);
    for (e = f = 0; 4 > e; ++e) for (var g = 0; 32 > g; g += 8) d[f++] = c.a[e] >>> g & 255;
    c = encrypt(d);

    return host + b + "&ctrl=" + Rc(c)
}